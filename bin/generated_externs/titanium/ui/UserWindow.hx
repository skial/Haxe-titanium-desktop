package titanium.ui;
titanium.ui.UserWindow;
titanium.ui.Menu;
@:native("Titanium.UI.UserWindow")
extern class UserWindow {
	public var isDialog:Bool;
	public function new():Void;
	public function close():String;
	@:overload(public function createWindow(options:String):UserWindow{})
	public function createWindow(options:Dynamic):UserWindow;
	public function focus():String;
	public function getBounds():Dynamic;
	public function getChildren():Array<UserWindow>;
	public function getContextMenu():Menu;
	public function getDOMWindow():DOMWindow;
	public function getHeight():Float;
	@:overload(public function getIcon():String{})
	public function getIcon():Void;
	public function getID():String;
	public function getMaxHeight():Float;
	public function getMaxWidth():Float;
	public function getMenu():Menu;
	public function getMinHeight():Float;
	public function getMinWidth():Float;
	public function getParent():UserWindow;
	public function getTitle():String;
	public function getTransparency():Float;
	public function getURL():String;
	public function getWidth():Float;
	public function getX():Float;
	public function getY():Float;
	public function hasTransparentBackground():Bool;
	public function hide():String;
	public function isActive():Bool;
	public function isCloseable():Bool;
	public function isDocumentEdited():Bool;
	public function isFullscreen(chrome:Bool):String;
	public function isMaximizable():String;
	public function isMaximized():Bool;
	public function isMinimizable():Bool;
	public function isMinimized():Bool;
	public function isResizable():Bool;
	public function isTopMost():Bool;
	public function isUsingChrome():Bool;
	public function isVisible():Bool;
	public function maximize():String;
	public function minimize():String;
	public function moveTo(x:Float, y:Float):Void;
	public function open():String;
	public var openFileChooserDialog:Dynamic->Dynamic->String;
	public var openFolderChooserDialog:Dynamic->Dynamic->String;
	public var openSaveAsDialog:Dynamic->Dynamic->Void;
	public function setBounds(bounds:Dynamic):String;
	public function setCloseable(closeable:Bool):String;
	public function setContents(contents:String, baseURL:String):String;
	public function setContextMenu(menu:Menu):String;
	public function setDocumentEdited(edited:Bool):Void;
	public function setFullscreen(fullscreen:Bool):String;
	public function setHeight(height:Float):String;
	public function setIcon(icon:String):String;
	public function setMaxHeight(height:Float):String;
	public function setMaximizable(maximizable:Bool):String;
	public function setMaxWidth(width:Float):String;
	public function setMenu(menu:Menu):String;
	public function setMinHeight(height:Float):String;
	public function setMinimizable(minimizable:Bool):String;
	public function setMinWidth(width:Float):String;
	public function setPluginsEnabled(enabled:Bool):undefined;
	public function setResizable(resizable:Bool):String;
	public function setSize(width:Float, height:Float):undefined;
	public function setTitle(title:Dynamic):String;
	public function setTopMost(topmost:Bool):String;
	public function setTransparency(url:Float):String;
	public function setURL(url:String):String;
	public function setUsingChrome(chrome:Bool):String;
	public function setVisible(visible:Bool):String;
	public function setWidth(width:Float):String;
	public function setX(x:Float):String;
	public function setY(y:Float):String;
	public function show():String;
	public function showInspector(console:Bool):String;
	public function unfocus():String;
	public function unmaximize():String;
	public function unminimize():String;
}