package titanium;
titanium.api.Environment;
titanium.api.Component;
titanium.api.Dependency;
titanium.api.Application;
@:native("Titanium.API")
extern class API {
	public static var APP_UPDATE:Float;
	public static var CRITICAL:Float;
	public static var DEBUG:Float;
	public static var EQ:Float;
	public static var ERROR:Float;
	public static var FATAL:Float;
	public static var GT:Float;
	public static var GTE:Float;
	public static var INFO:Float;
	public static var LT:Float;
	public static var LTE:Float;
	public static var MOBILESDK:Float;
	public static var MODULE:Float;
	public static var NOTICE:Float;
	public static var RUNTIME:Float;
	public static var SDK:Float;
	public static var TRACE:Float;
	public static var UNKNOWN:Float;
	public static var WARN:Float;
	public function new():Void;
	public var addEventListener:String->Dynamic->Float;
	public function createBytes(contents:String):Bytes;
	public function createDependency(type:Float, name:String, version:String, requirement:Float):Dependency;
	public function createKList(toWrap:Array):Array;
	public function createKMethod(toWrap:Dynamic):Dynamic;
	public function createKObject(toWrap:Dynamic):Dynamic;
	public function critical(statement:String):Void;
	public function debug(statement:String):Void;
	public function error(statement:String):Void;
	public function fatal(statement:String):Void;
	@:overload(public function fireEvent(event:String):Void{})
	public function fireEvent(event:Dynamic):Void;
	public function get(key:String):Dynamic;
	public function getApplication():Application;
	public function getComponentSearchPaths():Array<Component>;
	public function getEnvironment():Environment;
	public function getInstalledComponents():Array<Component>;
	public function getInstalledMobileSDKs():Array<Component>;
	public function getInstalledModules():Array<Component>;
	public function getInstalledRuntimes():Array<Component>;
	public function getInstalledSDKs():Array<Component>;
	public function getLogLevel():Float;
	public function info(statement:String):Void;
	public var installDependencies:Array<Dependency>->Dynamic->Void;
	public function log(type:Float, statement:String):Void;
	public function notice(statement:String):Void;
	public function print(data:Dynamic):Void;
	public function readApplicationManifest(manifestPath:String, applicationPath:String):Application;
	@:overload(public function removeEventListener(id:Float):Void{})
	public function removeEventListener(id:Dynamic):Void;
	public function runOnMainThread(method:Dynamic, arg:Dynamic):Dynamic;
	public function runOnMainThreadAsync(method:Dynamic, arg:Dynamic):Void;
	public function set(key:String, value:String):Void;
	public function setLogLevel(level:Float):Void;
	public function trace(statement:String):Void;
	public function warn(statement:String):Void;
}