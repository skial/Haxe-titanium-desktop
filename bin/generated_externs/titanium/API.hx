package titanium;
@:native("Titanium.API")
extern class API {
	public static var APP_UPDATE:Float;
	public static var CRITICAL:Float;
	public static var DEBUG:Float;
	public static var EQ:Float;
	public static var ERROR:Float;
	public static var FATAL:Float;
	public static var GT:Float;
	public static var GTE:Float;
	public static var INFO:Float;
	public static var LT:Float;
	public static var LTE:Float;
	public static var MOBILESDK:Float;
	public static var MODULE:Float;
	public static var NOTICE:Float;
	public static var RUNTIME:Float;
	public static var SDK:Float;
	public static var TRACE:Float;
	public static var UNKNOWN:Float;
	public static var WARN:Float;
	public function new():Void;
	public function addEventListener(eventName:String, callback:Dynamic):Float;
	public function createBytes(contents:String):Bytes;
	public function createDependency(type:Float, name:String, version:String, requirement:Float):api.Dependency;
	public function createKList(toWrap:Array):Array;
	public function createKMethod(toWrap:Dynamic):Dynamic;
	public function createKObject(toWrap:Dynamic):Dynamic;
	public function critical(statement:String):Void;
	public function debug(statement:String):Void;
	public function error(statement:String):Void;
	public function fatal(statement:String):Void;
	public function fireEvent(event:String|Object):Void;
	public function get(key:String):Dynamic;
	public function getApplication():api.Application;
	public function getComponentSearchPaths():Array<api.Component>;
	public function getEnvironment():api.Environment;
	public function getInstalledComponents():Array<api.Component>;
	public function getInstalledMobileSDKs():Array<api.Component>;
	public function getInstalledModules():Array<api.Component>;
	public function getInstalledRuntimes():Array<api.Component>;
	public function getInstalledSDKs():Array<api.Component>;
	public function getLogLevel():Float;
	public function info(statement:String):Void;
	public function installDependencies(dependencies:Array<api.Dependency>, callback:Dynamic):Void;
	public function log(type:Float, statement:String):Void;
	public function notice(statement:String):Void;
	public function print(data:Dynamic):Void;
	public function readApplicationManifest(manifestPath:String, applicationPath:String):api.Application;
	public function removeEventListener(id:Number|Function):Void;
	public function runOnMainThread(method:Dynamic, ...:Dynamic):Dynamic;
	public function runOnMainThreadAsync(method:Dynamic, ...:Dynamic):Void;
	public function set(key:String, value:String):Void;
	public function setLogLevel(level:Float):Void;
	public function trace(statement:String):Void;
	public function warn(statement:String):Void;
}